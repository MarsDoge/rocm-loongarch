diff --git a/CMakeLists.txt b/CMakeLists.txt
index 53842875..e261af96 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -601,7 +601,6 @@ if(DEMANGLE_DIR)
 endif()
 
 ## Set RCCL compile options
-target_compile_options(rccl PRIVATE -parallel-jobs=12)
 target_compile_options(rccl PRIVATE -Wno-format-nonliteral)
 target_compile_options(rccl PRIVATE -fgpu-rdc)               # Generate relocatable device code (required for extern __shared__)
 target_compile_options(rccl PRIVATE -fvisibility=hidden)     # Set symbol visibility to hidden by default
@@ -634,7 +633,6 @@ endif()
 target_link_libraries(rccl PRIVATE -fgpu-rdc)               # Required when linking relocatable device code
 
 ## Set RCCL link options
-target_link_options(rccl PRIVATE -parallel-jobs=16)       # Use multiple threads to link
 if(BUILD_ADDRESS_SANITIZER)
   target_link_options(rccl PRIVATE -fuse-ld=lld)
 endif()
diff --git a/src/include/gdrwrap.h b/src/include/gdrwrap.h
index f532a705..e0da2bdf 100644
--- a/src/include/gdrwrap.h
+++ b/src/include/gdrwrap.h
@@ -41,7 +41,7 @@ static inline void wc_store_fence(void) { asm volatile("sync") ; }
 #elif defined(__x86_64__)
 #include <immintrin.h>
 static inline void wc_store_fence(void) { _mm_sfence(); }
-#elif defined(__aarch64__)
+#elif defined(__aarch64__) || defined(__loongarch_lp64)
 #ifdef __cplusplus
 #include <atomic>
 static inline void wc_store_fence(void) { std::atomic_thread_fence(std::memory_order_release); }
diff --git a/src/include/msccl/msccl_struct.h b/src/include/msccl/msccl_struct.h
index 4ce0b3e6..cf6386dc 100644
--- a/src/include/msccl/msccl_struct.h
+++ b/src/include/msccl/msccl_struct.h
@@ -64,7 +64,7 @@ struct mscclThreadBlock {
   int16_t channelId; // associated channel. -1 indicates a thread block with only local copies
 }; // 5384 bytes
 
-static_assert(sizeof(struct mscclThreadBlock) % sizeof(uint64_t) == 0, "Sanity check: sizeof(struct mscclThreadBlock) % sizeof(uint64_t) != 0");
+static_assert(sizeof(struct mscclThreadBlock) % sizeof(uint64_t) == 0, "Sanity check: sizeof(struct mscclThreadBlock) \\% sizeof(uint64_t) != 0");
 
 struct mscclFlag {
   uint64_t flag;
diff --git a/tools/MultiRank/README.mpi b/tools/MultiRank/README.mpi
index 4672aa9e..7af63883 100755
--- a/tools/MultiRank/README.mpi
+++ b/tools/MultiRank/README.mpi
@@ -9,9 +9,9 @@ export MPI_INSTALL_PATH=
 export RCCL_INSTALL_PATH=
 export ROCM_INSTALL_PATH=
 
-$MPI_INSTALL_PATH/bin/mpiCC -o rccl-allreduce-mpi-multirank rccl-allreduce-mpi-multirank.cc -I$ROCM_INSTALL_PATH/include -I$RCCL_INSTALL_PATH/include -D__HIP_PLATFORM_AMD__ -L$ROCM_INSTALL_PATH/lib -lamdhip64 -L$RCCL_INSTALL_PATH/lib -lrccl
+$MPI_INSTALL_PATH/bin/mpiCC -o rccl-allreduce-mpi-multirank rccl-allreduce-mpi-multirank.cc -I$ROCM_INSTALL_PATH/include -I$RCCL_INSTALL_PATH/include -D__HIP_PLATFORM_AMD__ -L$ROCM_INSTALL_PATH/lib libamdhip64.so -L$RCCL_INSTALL_PATH/lib -lrccl
 
-$MPI_INSTALL_PATH/bin/mpiCC -o rccl-reducescatter-mpi-multirank rccl-reducescatter-mpi-multirank.cc -I$ROCM_INSTALL_PATH/include -I$RCCL_INSTALL_PATH/include -D__HIP_PLATFORM_AMD__ -L$ROCM_INSTALL_PATH/lib -lamdhip64 -L$RCCL_INSTALL_PATH/lib -lrccl
+$MPI_INSTALL_PATH/bin/mpiCC -o rccl-reducescatter-mpi-multirank rccl-reducescatter-mpi-multirank.cc -I$ROCM_INSTALL_PATH/include -I$RCCL_INSTALL_PATH/include -D__HIP_PLATFORM_AMD__ -L$ROCM_INSTALL_PATH/lib libamdhip64.so -L$RCCL_INSTALL_PATH/lib -lrccl
 
 
 export GPU_MAX_HW_QUEUES=16
