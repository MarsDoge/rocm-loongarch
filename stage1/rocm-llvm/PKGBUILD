pkgbase='rocm-llvm'
pkgname=('rocm-llvm')
pkgver=next
pkgrel=999000
pkgdesc="rocm-core is a utility which can be used to get ROCm release version."
arch=('loong64' 'x86_64')
license=('Apache')
depends=("rocm-core=${pkgver}")
url="https://github.com/ROCm-Developer-Tools/llvm-project"

source=(
    "git+git://nas.xinmu.moe/github.com/RadeonOpenCompute/llvm-project.git#branch=amd-stg-open"
    "loongarch.patch"
)
b2sums=('SKIP' 'SKIP')
#prepare() {
#echo
#}
TARGET="AMDGPU;"
if [ $CARCH == 'loong64' ];
then
 TARGET="$TARGET;LoongArch;"
elif [ $CARCH == 'x86_64' ];
then
 TARGET="$TARGET;X86;"
fi
prepare() {
  cd llvm-project
    git apply ../loongarch.patch
  cd ..
  mkdir build || true
  cd build
  cmake \
  -DCMAKE_BUILD_TYPE=Release \
  -DCMAKE_C_FLAGS="-fno-lto -pipe" \
  -DCMAKE_CXX_FLAGS="-fno-lto -pipe" \
  -DCMAKE_INSTALL_PREFIX="/opt/rocm-${pkgver}" \
  -DLLVM_ENABLE_ASSERTIONS=1 \
  -DLLVM_TARGETS_TO_BUILD="$TARGET" \
  -DLLVM_ENABLE_PROJECTS="lld;clang;flang" \
  -DLLVM_ENABLE_RUNTIMES="compiler-rt;libunwind;libcxx;libcxxabi" \
  -DPROJECT_VERSION_MAJOR=5 \
  -DPROJECT_VERSION_MINOR=7 \
  -DPROJECT_VERSION_PATCH=0 \
  -DCOMPILER_RT_HAS_FNO_LTO_FLAG=ON \
  -DCOMPILER_RT_INCLUDE_TESTS=NO \
  -DHAVE_CLANG_REPL_SUPPORT=NO \
  -G "Ninja" \
  -S ../llvm-project/llvm/
}
build() {
  cd build
  cmake --build .
}

check() {
#  cd build
#  ninja check
echo
}

#packaging() {

#}
package() {
  cd build
  cmake --install . --prefix "$pkgdir"/opt/rocm-${pkgver}
}

