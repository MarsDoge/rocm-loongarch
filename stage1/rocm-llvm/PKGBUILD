pkgbase='rocm-llvm'
pkgname=('rocm-llvm')
pkgver=6.2.2
pkgrel=622000
pkgdesc="rocm-core is a utility which can be used to get ROCm release version."
arch=('loong64' 'x86_64')
license=('Apache')
url="https://github.com/ROCm/llvm-project"
provides=('rocm-compilersupport' 'rocm-device-libs')
source=(
    "git+https://github.com/ROCm/llvm-project.git#tag=rocm-$pkgver"
    "loongarch.patch"
)
b2sums=('SKIP' 'SKIP')
#prepare() {
#echo
#}
TARGET="AMDGPU;NVPTX;"
TARGET="$TARGET;LoongArch;"
TARGET="$TARGET;X86;"
prepare() {
  cd llvm-project
    git apply ../loongarch.patch
  cd ..
  mkdir build || true
  cd build
  EXT_CFLAGS="-pipe"
  if [ $CARCH == 'loong64' ];
  then
    EXT_CFLAGS="-mcmodel=medium $EXT_CFLAGS"
  fi
  cmake \
  -DCMAKE_C_COMPILER=clang \
  -DCMAKE_CXX_COMPILER=clang++ \
  -DCMAKE_BUILD_TYPE=RelWithDebInfo \
  -DCMAKE_C_FLAGS="$EXT_CFLAGS" \
  -DCMAKE_CXX_FLAGS="$EXT_CFLAGS" \
  -DCMAKE_INSTALL_PREFIX="/opt/rocm-${pkgver}" \
  -DLLVM_ENABLE_ASSERTIONS=1 \
  -DLLVM_TARGETS_TO_BUILD="$TARGET" \
  -DLLVM_ENABLE_PROJECTS="lld;clang;compiler-rt;flang" \
  -DLLVM_EXTERNAL_PROJECTS="device-libs;hipcc;comgr" \
  -DLLVM_EXTERNAL_HIPCC_SOURCE_DIR=$PWD/../llvm-project/amd/hipcc/ \
  -DLLVM_EXTERNAL_COMGR_SOURCE_DIR=$PWD/../llvm-project/amd/comgr/ \
  -DLLVM_EXTERNAL_DEVICE_LIBS_SOURCE_DIR=$PWD/../llvm-project/amd/device-libs/ \
  -DHIP_PLATFORM='amd' \
  -DPROJECT_VERSION_MAJOR=6 \
  -DPROJECT_VERSION_MINOR=2 \
  -DPROJECT_VERSION_PATCH=2 \
  -DBUILD_SHARED_LIBS=ON \
  -G "Ninja" \
  -S ../llvm-project/llvm/
  sed -i 's!-lamdhip64!/opt/rocm-next/lib64/libamdhip64.so!g' ../llvm-project/clang/lib/Driver/ToolChains/Linux.cpp
}
build() {
  cd build
  cmake --build .
}

check() {
#  cd build
#  ninja check
echo
}

#packaging() {

#}
package() {
  cd build
  cmake --install . --prefix "$pkgdir"/opt/rocm-${pkgver}
}

