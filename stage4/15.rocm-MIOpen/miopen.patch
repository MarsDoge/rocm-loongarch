diff --git a/CMakeLists.txt b/CMakeLists.txt
index 980e305c4..7cb474f68 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -67,7 +67,7 @@ set(CMAKE_CXX_EXTENSIONS OFF)
 include(CTest)
 
 find_package(Threads REQUIRED)
-find_package(ROCM 0.7.3 REQUIRED PATHS /opt/rocm)
+find_package(ROCM 0.7.3 REQUIRED PATHS /opt/rocm-next/)
 
 include(ROCMInstallTargets)
 include(ROCMPackageConfigHelpers)
@@ -138,7 +138,7 @@ if(NOT WIN32)
     check_cxx_linker_flag(stdc++fs HAS_LIB_STD_FILESYSTEM)
 endif()
 
-list(APPEND CMAKE_PREFIX_PATH ${CMAKE_INSTALL_PREFIX} ${CMAKE_INSTALL_PREFIX}/llvm ${CMAKE_INSTALL_PREFIX}/hip /opt/rocm /opt/rocm/llvm /opt/rocm/hip)
+list(APPEND CMAKE_PREFIX_PATH ${CMAKE_INSTALL_PREFIX} ${CMAKE_INSTALL_PREFIX}/llvm ${CMAKE_INSTALL_PREFIX}/hip /opt/rocm /opt/rocm-next/ /opt/rocm/hip)
 
 option(ENABLE_HIP_WORKAROUNDS Off)
 set(MIOPEN_INSTALL_CXX_HEADERS Off CACHE BOOL "Install MIOpen's C++ header interface")
@@ -193,7 +193,7 @@ if( MIOPEN_BACKEND STREQUAL "OpenCL")
     find_program(MIOPEN_HIP_COMPILER clang++
         PATH_SUFFIXES bin
         PATHS
-            /opt/rocm/llvm
+            /opt/rocm-next/
             ${CMAKE_INSTALL_PREFIX}/llvm
     )
     if(MIOPEN_HIP_COMPILER)
@@ -215,7 +215,7 @@ endif()
 
 
 # HIP is always required
-find_package(hip REQUIRED PATHS /opt/rocm)
+find_package(hip REQUIRED PATHS /opt/rocm-next/)
 message(STATUS "Build with HIP ${hip_VERSION}")
 
 # Override HIP version in config.h, if necessary.
@@ -330,7 +330,7 @@ if( MIOPEN_BACKEND STREQUAL "HIP" OR MIOPEN_BACKEND STREQUAL "HIPOC" OR MIOPEN_B
     # rocblas
     set(MIOPEN_USE_ROCBLAS ON CACHE BOOL "")
     if(MIOPEN_USE_ROCBLAS)
-        find_package(rocblas REQUIRED PATHS /opt/rocm)
+        find_package(rocblas REQUIRED PATHS /opt/rocm-next/)
         message(STATUS "Build with rocblas ${rocblas_VERSION}")
     else()
         message(STATUS "Build without rocblas")
@@ -349,7 +349,7 @@ if(MIOPEN_HIP_COMPILER MATCHES ".*clang\\+\\+.*")
     find_program(MIOPEN_OFFLOADBUNDLER_BIN clang-offload-bundler
         PATH_SUFFIXES bin
         PATHS
-            /opt/rocm/llvm
+            /opt/rocm-next/
             ${CMAKE_INSTALL_PREFIX}/llvm
     )
 endif()
@@ -395,7 +395,7 @@ find_program(MIOPEN_AMDGCN_ASSEMBLER
     PATHS
         ${MIOPEN_AMDGCN_ASSEMBLER_PATH}
         /opt/rocm
-        /opt/rocm/llvm
+        /opt/rocm-next/
         ${CMAKE_INSTALL_PREFIX}
         ${CMAKE_INSTALL_PREFIX}/llvm
     PATH_SUFFIXES
@@ -481,14 +481,14 @@ set(MIOPEN_SYSTEM_FIND_DB_SUFFIX "${MIOPEN_BACKEND}" CACHE PATH "Filename suffix
 # Enabled via the MIOPEN_ENABLE_LOGGING_ROCTX env var.
 set(MIOPEN_USE_ROCTRACER ON CACHE BOOL "")
 if(NOT WIN32 AND MIOPEN_USE_ROCTRACER)
-    find_library(rocTracer roctx64)
-    if(rocTracer)
-        MESSAGE(STATUS "Build with rocTracer: " ${rocTracer})
-        set(MIOPEN_PACKAGE_REQS "${MIOPEN_PACKAGE_REQS}, roctracer")
-    else()
-        message(WARNING "rocTracer cannot be found! Build without rocTracer")
-        set(MIOPEN_USE_ROCTRACER OFF)
-    endif()
+    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_CXX_FLAGS_RELEASE} /opt/rocm-next/lib64/libroctx64.so")
+#    if(rocTracer)
+#        MESSAGE(STATUS "Build with rocTracer: " ${rocTracer})
+#        set(MIOPEN_PACKAGE_REQS "${MIOPEN_PACKAGE_REQS}, roctracer")
+#    else()
+#        message(WARNING "rocTracer cannot be found! Build without rocTracer")
+#        set(MIOPEN_USE_ROCTRACER OFF)
+#    endif()
 else()
     message(STATUS "Build without rocTracer")
     set(MIOPEN_USE_ROCTRACER OFF)
